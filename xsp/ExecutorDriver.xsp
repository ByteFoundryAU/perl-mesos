%module{Net::Mesos};
#include <ExecutorDriver.hpp>
#include <NetMesosXSUtils.hpp>
#include <string>
#include <vector>


%name{Net::Mesos::ExecutorDriver} class mesos::perl::ExecutorDriver
{

%{

static void
xs_init(SV* self)
    PPCODE:
        if (SvROK(self) && SvTYPE(SvRV(self)) == SVt_PVHV) {
            mesos::perl::ExecutorDriver* driver = new mesos::perl::ExecutorDriver();
            sv_magic(SvRV(self), Nullsv, PERL_MAGIC_ext,
                             (const char*) driver, 0);
        }

mesos::perl::MesosChannel*
mesos::perl::ExecutorDriver::_channel()
    CODE:
        RETVAL = THIS->channel_.get();
    OUTPUT:
        RETVAL

%}

Status start();

Status stop();

Status abort();

Status sendStatusUpdate(mesos::TaskStatus status);

Status sendFrameworkMessage(std::string data);

Status status()
    %code{% RETVAL = THIS->status_; %};

};
